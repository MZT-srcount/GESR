{"feynman-i.6.20": {"dataset_class_key": "FeynmanICh6Eq20", "sympy_eq_str": "sqrt(2)*exp(-x0**2/(2*x1**2))/(2*sqrt(pi)*x1)", "sympy_eq_srepr": "Mul(Rational(1, 2), Pow(Integer(2), Rational(1, 2)), Pow(pi, Rational(-1, 2)), Pow(Symbol('x1', real=True), Integer(-1)), exp(Mul(Integer(-1), Rational(1, 2), Pow(Symbol('x0', real=True), Integer(2)), Pow(Symbol('x1', real=True), Integer(-2)))))", "symbols": ["$f$", "$\\theta$", "$\\sigma$"], "symbols_descs": ["Probability density function", "Position", "Standard deviation"], "si-derived_units": ["$1$", "$1$", "$1$"], "si_units": ["$1$", "$1$", "$1$"], "properties": ["V, F, P", "V, F", "V, F, P"]}, "feynman-i.6.20a": {"dataset_class_key": "FeynmanICh6Eq20a", "sympy_eq_str": "sqrt(2)*exp(-x0**2/2)/(2*sqrt(pi))", "sympy_eq_srepr": "Mul(Rational(1, 2), Pow(Integer(2), Rational(1, 2)), Pow(pi, Rational(-1, 2)), exp(Mul(Integer(-1), Rational(1, 2), Pow(Symbol('x0', real=True), Integer(2)))))", "symbols": ["$f$", "$\\theta$"], "symbols_descs": ["Probability density function", "Position"], "si-derived_units": ["$1$", "$1$"], "si_units": ["$1$", "$1$"], "properties": ["V, F, P", "V, F"]}, "feynman-i.6.20b": {"dataset_class_key": "FeynmanICh6Eq20b", "sympy_eq_str": "sqrt(2)*exp(-(x0 - x1)**2/(2*x2**2))/(2*sqrt(pi)*x2)", "sympy_eq_srepr": "Mul(Rational(1, 2), Pow(Integer(2), Rational(1, 2)), Pow(pi, Rational(-1, 2)), Pow(Symbol('x2', real=True), Integer(-1)), exp(Mul(Integer(-1), Rational(1, 2), Pow(Symbol('x2', real=True), Integer(-2)), Pow(Add(Symbol('x0', real=True), Mul(Integer(-1), Symbol('x1', real=True))), Integer(2)))))", "symbols": ["$f$", "$\\theta$", "$\\theta_1$", "$\\sigma$"], "symbols_descs": ["Probability density function", "Position", "Position", "Standard deviation"], "si-derived_units": ["$1$", "$1$", "$1$", "$1$"], "si_units": ["$1$", "$1$", "$1$", "$1$"], "properties": ["V, F, P", "V, F", "V, F", "V, F, P"]}, "feynman-i.9.18": {"dataset_class_key": "FeynmanICh9Eq18", "sympy_eq_str": "6.6743e-11*x0*x1/((x2 - x3)**2 + (x4 - x5)**2 + (x6 - x7)**2)", "sympy_eq_srepr": "Mul(Float('6.6742999999999994e-11', precision=53), Symbol('x0', real=True), Symbol('x1', real=True), Pow(Add(Pow(Add(Symbol('x2', real=True), Mul(Integer(-1), Symbol('x3', real=True))), Integer(2)), Pow(Add(Symbol('x4', real=True), Mul(Integer(-1), Symbol('x5', real=True))), Integer(2)), Pow(Add(Symbol('x6', real=True), Mul(Integer(-1), Symbol('x7', real=True))), Integer(2))), Integer(-1)))", "symbols": ["$F$", "$G$", "$m_1$", "$m_2$", "$x_2$", "$x_1$", "$y_2$", "$y_1$", "$z_2$", "$z_1$"], "symbols_descs": ["Force of gravity", "Gravitational constant", "Mass", "Mass", "Position", "Position", "Position", "Position", "Position", "Position"], "si-derived_units": ["$N$", "$m^3 \\cdot kg^{-1} \\cdot s^{-2}$", "$kg$", "$kg$", "$m$", "$m$", "$m$", "$m$", "$m$", "$m$"], "si_units": ["$kg \\cdot m \\cdot s^{-2}$", "$kg^{-1} \\cdot m^3 \\cdot s^{-2}$", "$kg$", "$kg$", "$m$", "$m$", "$m$", "$m$", "$m$", "$m$"], "properties": ["V, F, P", "C, F, P", "V, F, P", "V, F, P", "V, F", "V, F", "V, F", "V, F", "V, F", "V, F"]}, "feynman-i.15.3t": {"dataset_class_key": "FeynmanICh15Eq3t", "sympy_eq_str": "(x0 - 1.11265005605362e-17*x1*x2)/sqrt(1 - 1.11265005605362e-17*x1**2)", "sympy_eq_srepr": "Mul(Pow(Add(Integer(1), Mul(Integer(-1), Float('1.1126500560536185e-17', precision=53), Pow(Symbol('x1', real=True), Integer(2)))), Rational(-1, 2)), Add(Symbol('x0', real=True), Mul(Integer(-1), Float('1.1126500560536185e-17', precision=53), Symbol('x1', real=True), Symbol('x2', real=True))))", "symbols": ["$t_1$", "$t$", "$u$", "$x$", "$c$"], "symbols_descs": ["Time", "Time", "Velocity", "Position", "Speed of light"], "si-derived_units": ["$s$", "$s$", "$m/s$", "$m$", "$m/s$"], "si_units": ["$s$", "$s$", "$m \\cdot s^{-1}$", "$m$", "$m \\cdot s^{-1}$"], "properties": ["V, F", "V, F, NN", "V, F", "V, F, P", "C, F, P"]}, "feynman-i.15.3x": {"dataset_class_key": "FeynmanICh15Eq3x", "sympy_eq_str": "(x0 - x1*x2)/sqrt(1 - 1.11265005605362e-17*x1**2)", "sympy_eq_srepr": "Mul(Pow(Add(Integer(1), Mul(Integer(-1), Float('1.1126500560536185e-17', precision=53), Pow(Symbol('x1', real=True), Integer(2)))), Rational(-1, 2)), Add(Symbol('x0', real=True), Mul(Integer(-1), Symbol('x1', real=True), Symbol('x2', real=True))))", "symbols": ["$x_1$", "$x$", "$u$", "$t$", "$c$"], "symbols_descs": ["Position", "Position", "Velocity", "Time", "Speed of light"], "si-derived_units": ["$m$", "$m$", "$m/s$", "$s$", "$m/s$"], "si_units": ["$m$", "$m$", "$m \\cdot s^{-1}$", "$s$", "$m \\cdot s^{-1}$"], "properties": ["V, F", "V, F", "V, F", "V, F", "C, F, P"]}, "feynman-i.29.16": {"dataset_class_key": "FeynmanICh29Eq16", "sympy_eq_str": "sqrt(x0**2 + 2*x0*x1*cos(x2 - x3) + x1**2)", "sympy_eq_srepr": "Pow(Add(Pow(Symbol('x0', real=True), Integer(2)), Mul(Integer(2), Symbol('x0', real=True), Symbol('x1', real=True), cos(Add(Symbol('x2', real=True), Mul(Integer(-1), Symbol('x3', real=True))))), Pow(Symbol('x1', real=True), Integer(2))), Rational(1, 2))", "symbols": ["$x$", "$x_1$", "$x_2$", "$\\theta_1$", "$\\theta_2$"], "symbols_descs": ["Wavelength", "Wavelength", "Wavelength", "Angle", "Angle"], "si-derived_units": ["$m$", "$m$", "$m$", "$rad$", "$rad$"], "si_units": ["$m$", "$m$", "$m$", "$1$", "$1$"], "properties": ["V, F, P", "V, F, P", "V, F, P", "V, F, NN", "V, F, NN"]}, "feynman-i.30.3": {"dataset_class_key": "FeynmanICh30Eq3", "sympy_eq_str": "x0*sin(x1*x2/2)**2/sin(x2/2)**2", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), Pow(sin(Mul(Rational(1, 2), Symbol('x2', real=True))), Integer(-2)), Pow(sin(Mul(Rational(1, 2), Symbol('x1', real=True), Symbol('x2', real=True))), Integer(2)))", "symbols": ["$I$", "$I_0$", "$n$", "$\\theta$"], "symbols_descs": ["Amplitude of combined wave", "Amplitude of wave", "Number of waves", "Phase difference"], "si-derived_units": ["$1$", "$1$", "$1$", "$rad$"], "si_units": ["$1$", "$1$", "$1$", "$1$"], "properties": ["V, F, P", "V, F, P", "V, I, P", "V, F"]}, "feynman-i.32.17": {"dataset_class_key": "FeynmanICh32Eq17", "sympy_eq_str": "0.00353914989750933*pi*x0**2*x1**2*x2**4/(x2**2 - x3**2)**2", "sympy_eq_srepr": "Mul(Float('0.003539149897509333', precision=53), pi, Pow(Symbol('x0', real=True), Integer(2)), Pow(Symbol('x1', real=True), Integer(2)), Pow(Symbol('x2', real=True), Integer(4)), Pow(Add(Pow(Symbol('x2', real=True), Integer(2)), Mul(Integer(-1), Pow(Symbol('x3', real=True), Integer(2)))), Integer(-2)))", "symbols": ["$P$", "$\\epsilon$", "$c$", "$E$", "$r$", "$\\omega$", "$\\omega_0$"], "symbols_descs": ["Energy", "Vacuum permittivity", "Speed of light", "Magnitude of electric field", "Radius", "Frequency of electromagnetic waves", "Frequency of electromagnetic waves"], "si-derived_units": ["$J$", "$F/m$", "$m/s$", "$m$", "$m$", "$rad/s$", "$rad/s$"], "si_units": ["$kg \\cdot m^2 \\cdot s^{-2}$", "$kg^{-1} \\cdot m^{-3} \\cdot s^4 \\cdot A^2$", "$m \\cdot s^{-1}$", "$m$", "$m$", "$s^{-1}$", "$s^{-1}$"], "properties": ["V, F, P", "C, F, P", "C, F, P", "V, F", "V, F, P", "V, F", "V, F"]}, "feynman-i.34.14": {"dataset_class_key": "FeynmanICh34Eq14", "sympy_eq_str": "x1*(3.33564095198152e-9*x0 + 1)/sqrt(1 - 1.11265005605362e-17*x0**2)", "sympy_eq_srepr": "Mul(Symbol('x1', real=True), Pow(Add(Integer(1), Mul(Integer(-1), Float('1.1126500560536185e-17', precision=53), Pow(Symbol('x0', real=True), Integer(2)))), Rational(-1, 2)), Add(Mul(Float('3.3356409519815204e-9', precision=53), Symbol('x0', real=True)), Integer(1)))", "symbols": ["$\\omega$", "$v$", "$c$", "$\\omega_0$"], "symbols_descs": ["Frequency of electromagnetic waves", "Velocity", "Speed of light", "Frequency of electromagnetic waves"], "si-derived_units": ["$rad/s$", "$m/s$", "$m/s$", "$rad/s$"], "si_units": ["$s^{-1}$", "$m \\cdot s^{-1}$", "$m \\cdot s^{-1}$", "$s^{-1}$"], "properties": ["V, F, P", "V, F", "C, F, P", "V, F, P"]}, "feynman-i.37.4": {"dataset_class_key": "FeynmanICh37Eq4", "sympy_eq_str": "x0 + x1 + 2*sqrt(x0*x1)*cos(x2)", "sympy_eq_srepr": "Add(Symbol('x0', real=True), Symbol('x1', real=True), Mul(Integer(2), Pow(Mul(Symbol('x0', real=True), Symbol('x1', real=True)), Rational(1, 2)), cos(Symbol('x2', real=True))))", "symbols": ["$I_{12}$", "$I_1$", "$I_2$", "$\\delta$"], "symbols_descs": ["Amplitude of wave", "Amplitude of wave", "Amplitude of wave", "Phase difference"], "si-derived_units": ["$m$", "$m$", "$m$", "$rad$"], "si_units": ["$m$", "$m$", "$m$", "$1$"], "properties": ["V, F, NN", "V, F, P", "V, F, P", "V, F, NN"]}, "feynman-i.39.22": {"dataset_class_key": "FeynmanICh39Eq22", "sympy_eq_str": "1.380649e-23*x0*x1/x2", "sympy_eq_srepr": "Mul(Float('1.3806490000000001e-23', precision=53), Symbol('x0', real=True), Symbol('x1', real=True), Pow(Symbol('x2', real=True), Integer(-1)))", "symbols": ["$P$", "$n$", "$k$", "$T$", "$V$"], "symbols_descs": ["Pressure", "Number of molecules", "Boltzmann constant", "Temperature", "Volume"], "si-derived_units": ["$Pa$", "$1$", "$J/K$", "$K$", "$m^3$"], "si_units": ["$kg \\cdot m^{-1} \\cdot s^{-2}$", "$1$", "$kg \\cdot m^2 \\cdot s^{-2} \\cdot K^{-1}$", "$K$", "$m^3$"], "properties": ["V, F, P", "V, I$\\star$, P", "C, F, P", "V, F, P", "V, F, P"]}, "feynman-i.40.1": {"dataset_class_key": "FeynmanICh40Eq1", "sympy_eq_str": "x0*exp(-7.10292768111229e+23*x1*x2/x3)", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), exp(Mul(Integer(-1), Float('7.1029276811122876e+23', precision=53), Symbol('x1', real=True), Symbol('x2', real=True), Pow(Symbol('x3', real=True), Integer(-1)))))", "symbols": ["$n$", "$n_0$", "$m$", "$g$", "$x$", "$k$", "$T$"], "symbols_descs": ["Molecular density", "Molecular density", "Mass", "Gravitational acceleration", "Height", "Boltzmann constant", "Temperature"], "si-derived_units": ["$1/m^3$", "$1/m^3$", "$kg$", "$m/s^2$", "$m$", "$J/K$", "$K$"], "si_units": ["$m^{-3}$", "$m^{-3}$", "$kg$", "$m \\cdot s^{-2}$", "$m$", "$kg \\cdot m^2 \\cdot s^{-2} \\cdot K^{-1}$", "$K$"], "properties": ["V, F, P", "V, F, P", "V, F, P", "C, F, P", "V, F", "C, F, P", "V, F, P"]}, "feynman-i.41.16": {"dataset_class_key": "FeynmanICh41Eq16", "sympy_eq_str": "3.68620963570564e-51*x0**3/(pi**3*(exp(2.39959613196403e-11*x0/(pi*x1)) - 1))", "sympy_eq_srepr": "Mul(Float('3.6862096357056378e-51', precision=53), Pow(pi, Integer(-3)), Pow(Symbol('x0', real=True), Integer(3)), Pow(Add(exp(Mul(Float('2.3995961319640253e-11', precision=53), Pow(pi, Integer(-1)), Symbol('x0', real=True), Pow(Symbol('x1', real=True), Integer(-1)))), Integer(-1)), Integer(-1)))", "symbols": ["$L_\\text{rad}$", "$h$", "$\\omega$", "$c$", "$k$", "$T$"], "symbols_descs": ["Radiation per frequency", "Planck constant", "Frequency of electromagnetic wave", "Speed of light", "Boltzmann constant", "Temperature"], "si-derived_units": ["$J/m^2$", "$J \\cdot s$", "$1/s$", "$m/s$", "$J/K$", "$K$"], "si_units": ["$kg \\cdot s^{-2}$", "$kg \\cdot m^2 \\cdot s^{-1}$", "$s^{-1}$", "$m \\cdot s^{-1}$", "$kg \\cdot m^2 \\cdot s^{-2} \\cdot K^{-1}$", "$K$"], "properties": ["V, F, P", "C, F, P", "V, F, P", "C, F, P", "C, F, P", "V, F, P"]}, "feynman-i.44.4": {"dataset_class_key": "FeynmanICh44Eq4", "sympy_eq_str": "1.380649e-23*x0*x1*log(x2/x3)", "sympy_eq_srepr": "Mul(Float('1.3806490000000001e-23', precision=53), Symbol('x0', real=True), Symbol('x1', real=True), log(Mul(Symbol('x2', real=True), Pow(Symbol('x3', real=True), Integer(-1)))))", "symbols": ["$Q$", "$n$", "$k$", "$T$", "$V_2$", "$V_1$"], "symbols_descs": ["Energy", "Number of molecules", "Boltzmann constant", "Temperature", "Volume", "Volume"], "si-derived_units": ["$J$", "$1$", "$J/K$", "$K$", "$m^3$", "$m^3$"], "si_units": ["$kg \\cdot m^2 \\cdot s^{-2}$", "$1$", "$kg \\cdot m^2 \\cdot s^{-2} \\cdot K^{-1}$", "$K$", "$m^3$", "$m^3$"], "properties": ["V, F", "V, I$\\star$, P", "C, F, P", "V, F, P", "V, F, P", "V, F, P"]}, "feynman-i.50.26": {"dataset_class_key": "FeynmanICh50Eq26", "sympy_eq_str": "x0*(x3*cos(x1*x2)**2 + cos(x1*x2))", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), Add(Mul(Symbol('x3', real=True), Pow(cos(Mul(Symbol('x1', real=True), Symbol('x2', real=True))), Integer(2))), cos(Mul(Symbol('x1', real=True), Symbol('x2', real=True)))))", "symbols": ["$x$", "$K$", "$\\omega$", "$t$", "$\\epsilon$"], "symbols_descs": ["Amplitude", "Amplitude", "Angular velocity", "Time", "Variable"], "si-derived_units": ["$1$", "$1$", "$rad/s$", "$s$", "$1$"], "si_units": ["$1$", "$1$", "$s^{-1}$", "$s$", "$1$"], "properties": ["V, F", "V, F, P", "V, F", "V, F, NN", "V, F"]}, "feynman-ii.6.15a": {"dataset_class_key": "FeynmanIICh6Eq15a", "sympy_eq_str": "84707476846.623*x0*x1*sqrt(x3**2 + x4**2)/(pi*x2**5)", "sympy_eq_srepr": "Mul(Float('84707476846.623001', precision=53), Pow(pi, Integer(-1)), Symbol('x0', real=True), Symbol('x1', real=True), Pow(Symbol('x2', real=True), Integer(-5)), Pow(Add(Pow(Symbol('x3', real=True), Integer(2)), Pow(Symbol('x4', real=True), Integer(2))), Rational(1, 2)))", "symbols": ["$E$", "$p$", "$\\epsilon$", "$z$", "$r$", "$x$", "$y$"], "symbols_descs": ["Electric field", "Electric dipole moment", "Vacuum permittivity", "Position", "Distance", "Position", "Position"], "si-derived_units": ["$V/m$", "$C \\cdot m$", "$F/m$", "$m$", "$m$", "$m$", "$m$"], "si_units": ["$kg \\cdot m \\cdot s^{-3} \\cdot A^{-1}$", "$m \\cdot s \\cdot A$", "$kg^{-1} \\cdot m^{-3} \\cdot s^4 \\cdot A^2$", "$m$", "$m$", "$m$", "$m$"], "properties": ["V, F", "V, F", "C, F, P", "V, F", "V, F, P", "V, F", "V, F"]}, "feynman-ii.6.15b": {"dataset_class_key": "FeynmanIICh6Eq15b", "sympy_eq_str": "84707476846.623*x0*sin(x1)*cos(x1)/(pi*x2**3)", "sympy_eq_srepr": "Mul(Float('84707476846.623001', precision=53), Pow(pi, Integer(-1)), Symbol('x0', real=True), Pow(Symbol('x2', real=True), Integer(-3)), sin(Symbol('x1', real=True)), cos(Symbol('x1', real=True)))", "symbols": ["$E$", "$p$", "$\\epsilon$", "$\\theta$", "$r$"], "symbols_descs": ["Electric field", "Electric dipole moment", "Vacuum permittivity", "Angle", "Distance"], "si-derived_units": ["$V/m$", "$C \\cdot m$", "$F/m$", "$rad$", "$m$"], "si_units": ["$kg \\cdot m \\cdot s^{-3} \\cdot A^{-1}$", "$m \\cdot s \\cdot A$", "$kg^{-1} \\cdot m^{-3} \\cdot s^4 \\cdot A^2$", "$1$", "$m$"], "properties": ["V, F", "V, F", "C, F, P", "V, F", "V, F, P"]}, "feynman-ii.11.17": {"dataset_class_key": "FeynmanIICh11Eq17", "sympy_eq_str": "x0*(7.24297051603992e+22*x1*x2*cos(x3)/x4 + 1)", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), Add(Mul(Float('7.2429705160399199e+22', precision=53), Symbol('x1', real=True), Symbol('x2', real=True), Pow(Symbol('x4', real=True), Integer(-1)), cos(Symbol('x3', real=True))), Integer(1)))", "symbols": ["$n$", "$n_0$", "$p_0$", "$E$", "$\\theta$", "$k$", "$T$"], "symbols_descs": ["Number of polar molecules per angle per unit volume", "Number of molecules per unit volume", "Electric dipole moment", "Magnitude of electric field", "Angle", "Boltzmann constant", "Temperature"], "si-derived_units": ["$1/(m^3 \\cdot rad \\cdot sr)$", "$1/(m^3 \\cdot sr)$", "$C \\cdot m$", "$V/m$", "$rad$", "$J/K$", "$K$"], "si_units": ["$m^{-3}$", "$m^{-3}$", "$m \\cdot s \\cdot A$", "$kg \\cdot m \\cdot s^{-3} \\cdot A^{-1}$", "$1$", "$kg \\cdot m^2 \\cdot s^{-2} \\cdot K^{-1}$", "$K$"], "properties": ["V, F", "V, F, P", "V, F", "V, F", "V, F, NN", "C, F, P", "V, F, P"]}, "feynman-ii.11.20": {"dataset_class_key": "FeynmanIICh11Eq20", "sympy_eq_str": "2.41432350534664e+22*x0*x1**2*x2/x3", "sympy_eq_srepr": "Mul(Float('2.4143235053466398e+22', precision=53), Symbol('x0', real=True), Pow(Symbol('x1', real=True), Integer(2)), Symbol('x2', real=True), Pow(Symbol('x3', real=True), Integer(-1)))", "symbols": ["$P$", "$n_0$", "$p_0$", "$E$", "$k$", "$T$"], "symbols_descs": ["Polarizability", "Number of atom", "Electric dipole moment", "Magnitude of electric field", "Boltzmann constant", "Temperature"], "si-derived_units": ["$C/m^2$", "$1$", "$C \\cdot m$", "$V/m$", "$J/K$", "$K$"], "si_units": ["$m^{-2} \\cdot s \\cdot A$", "$1$", "$m \\cdot s \\cdot A$", "$kg \\cdot m \\cdot s^{-3} \\cdot A^{-1}$", "$kg \\cdot m^2 \\cdot s^{-2} \\cdot K^{-1}$", "$K$"], "properties": ["V, F", "V, I$\\star$, P", "V, F", "V, F", "C, F, P", "V, F, P"]}, "feynman-ii.11.27": {"dataset_class_key": "FeynmanIICh11Eq27", "sympy_eq_str": "8.854e-12*x0*x1*x2/(-x0*x1/3 + 1)", "sympy_eq_srepr": "Mul(Float('8.8539999999999992e-12', precision=53), Symbol('x0', real=True), Symbol('x1', real=True), Symbol('x2', real=True), Pow(Add(Mul(Integer(-1), Rational(1, 3), Symbol('x0', real=True), Symbol('x1', real=True)), Integer(1)), Integer(-1)))", "symbols": ["$P$", "$N$", "$\\alpha$", "$\\epsilon$", "$E$"], "symbols_descs": ["Polarizability", "Number of atom", "Molecular polarizability", "Vacuum permittivity", "Magnitude of electric field"], "si-derived_units": ["$C/m^2$", "$1$", "$1$", "$F/m$", "$V/m$"], "si_units": ["$m^{-2} \\cdot s \\cdot A$", "$1$", "$1$", "$kg^{-1} \\cdot m^{-3} \\cdot s^4 \\cdot A^2$", "$kg \\cdot m \\cdot s^{-3} \\cdot A^{-1}$"], "properties": ["V, F", "V, I$\\star$, P", "V, F, P", "C, F, P", "V, F, P"]}, "feynman-ii.11.28": {"dataset_class_key": "FeynmanIICh11Eq28", "sympy_eq_str": "x0*x1/(-x0*x1/3 + 1) + 1", "sympy_eq_srepr": "Add(Mul(Symbol('x0', real=True), Symbol('x1', real=True), Pow(Add(Mul(Integer(-1), Rational(1, 3), Symbol('x0', real=True), Symbol('x1', real=True)), Integer(1)), Integer(-1))), Integer(1))", "symbols": ["$\\kappa$", "$N$", "$\\alpha$"], "symbols_descs": ["Electric dipole moment per unit volume", "Number of electric dipoles", "Molecular polarizability"], "si-derived_units": ["$1$", "$1$", "$1$"], "si_units": ["$1$", "$1$", "$1$"], "properties": ["V, F", "V, I$\\star$, P", "V, F, P"]}, "feynman-ii.13.23": {"dataset_class_key": "FeynmanIICh13Eq23", "sympy_eq_str": "x0/sqrt(1 - 1.11265005605362e-17*x1**2)", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), Pow(Add(Integer(1), Mul(Integer(-1), Float('1.1126500560536185e-17', precision=53), Pow(Symbol('x1', real=True), Integer(2)))), Rational(-1, 2)))", "symbols": ["$\\rho$", "$\\rho_0$", "$v$", "$c$"], "symbols_descs": ["Electric charge density", "Electric charge density", "Velocity", "Speed of light"], "si-derived_units": ["$C/m^3$", "$C/m^3$", "$m/s$", "$m/s$"], "si_units": ["$m^{-3} \\cdot s \\cdot A$", "$m^{-3} \\cdot s \\cdot A$", "$m \\cdot s^{-1}$", "$m \\cdot s^{-1}$"], "properties": ["V, F, P", "V, F, P", "V, F, P", "C, F, P"]}, "feynman-ii.13.34": {"dataset_class_key": "FeynmanIICh13Eq34", "sympy_eq_str": "x0*x1/sqrt(1 - 1.11265005605362e-17*x1**2)", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), Symbol('x1', real=True), Pow(Add(Integer(1), Mul(Integer(-1), Float('1.1126500560536185e-17', precision=53), Pow(Symbol('x1', real=True), Integer(2)))), Rational(-1, 2)))", "symbols": ["$j$", "$\\rho_0$", "$v$", "$c$"], "symbols_descs": ["Electric current", "Electric charge density", "Velocity", "Speed of light"], "si-derived_units": ["$A$", "$C/m^3$", "$m/s$", "$m/s$"], "si_units": ["$A$", "$m^{-3} \\cdot s \\cdot A$", "$m \\cdot s^{-1}$", "$m \\cdot s^{-1}$"], "properties": ["V, F, P", "V, F, P", "V, F, P", "C, F, P"]}, "feynman-ii.24.17": {"dataset_class_key": "FeynmanIICh24Eq17", "sympy_eq_str": "sqrt(1.11265005605362e-17*x0**2 - pi**2/x1**2)", "sympy_eq_srepr": "Pow(Add(Mul(Float('1.1126500560536185e-17', precision=53), Pow(Symbol('x0', real=True), Integer(2))), Mul(Integer(-1), Pow(pi, Integer(2)), Pow(Symbol('x1', real=True), Integer(-2)))), Rational(1, 2))", "symbols": ["$k$", "$\\omega$", "$c$", "$a$"], "symbols_descs": ["Wavenumber", "Angular velocity", "Speed of light", "Length"], "si-derived_units": ["$1/m$", "$rad/s$", "$m/s$", "$m$"], "si_units": ["$m^{-1}$", "$s^{-1}$", "$m \\cdot s^{-1}$", "$m$"], "properties": ["V, F, P", "V, F", "C, F, P", "V, F, P"]}, "feynman-ii.35.18": {"dataset_class_key": "FeynmanIICh35Eq18", "sympy_eq_str": "x0/(exp(7.24297051603992e+22*x1*x2/x3) + exp(-7.24297051603992e+22*x1*x2/x3))", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), Pow(Add(exp(Mul(Float('7.2429705160399199e+22', precision=53), Symbol('x1', real=True), Symbol('x2', real=True), Pow(Symbol('x3', real=True), Integer(-1)))), exp(Mul(Integer(-1), Float('7.2429705160399199e+22', precision=53), Symbol('x1', real=True), Symbol('x2', real=True), Pow(Symbol('x3', real=True), Integer(-1))))), Integer(-1)))", "symbols": ["$a$", "$N$", "$\\mu$", "$B$", "$k$", "$T$"], "symbols_descs": ["Number of atoms with the equivalent magnetic moment", "Number of atoms per unit volume", "Magnetic moment", "Magnetic flux density", "Boltzmann constant", "Temperature"], "si-derived_units": ["$1/m^3$", "$1/m^3$", "$N/A^2$", "$A/m$", "$J/K$", "$K$"], "si_units": ["$m^{-3}$", "$m^{-3}$", "$kg \\cdot m \\cdot s^{-2} \\cdot A^{-2}$", "$m^{-1} \\cdot A$", "$kg \\cdot m^2 \\cdot s^{-2} \\cdot K^{-1}$", "$K$"], "properties": ["V, I$\\star$, P", "V, I$\\star$, P", "V, F, P", "V, F, P", "C, F, P", "V, F, P"]}, "feynman-ii.35.21": {"dataset_class_key": "FeynmanIICh35Eq21", "sympy_eq_str": "x0*x1*tanh(7.24297051603992e+22*x1*x2/x3)", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), Symbol('x1', real=True), tanh(Mul(Float('7.2429705160399199e+22', precision=53), Symbol('x1', real=True), Symbol('x2', real=True), Pow(Symbol('x3', real=True), Integer(-1)))))", "symbols": ["$M$", "$N$", "$\\mu$", "$B$", "$k$", "$T$"], "symbols_descs": ["Number of magnetized atoms", "Number of atom", "Magnetic moment", "Magnetic flux density", "Boltzmann constant", "Temperature"], "si-derived_units": ["$1$", "$1$", "$N/A^2$", "$A/m$", "$J/K$", "$K$"], "si_units": ["$1$", "$1$", "$kg \\cdot m \\cdot s^{-2} \\cdot A^{-2}$", "$m^{-1} \\cdot A$", "$kg \\cdot m^2 \\cdot s^{-2} \\cdot K^{-1}$", "$K$"], "properties": ["V, I$\\star$, P", "V, I$\\star$, P", "V, F, P", "V, F, P", "C, F, P", "V, F, P"]}, "feynman-ii.36.38": {"dataset_class_key": "FeynmanIICh36Eq38", "sympy_eq_str": "7.24297051603992e+22*x0*x1/x2 + 9.10197825916707e+16*x0*x3*x4/x2", "sympy_eq_srepr": "Add(Mul(Float('7.2429705160399199e+22', precision=53), Symbol('x0', real=True), Symbol('x1', real=True), Pow(Symbol('x2', real=True), Integer(-1))), Mul(Float('91019782591670688.0', precision=53), Symbol('x0', real=True), Pow(Symbol('x2', real=True), Integer(-1)), Symbol('x3', real=True), Symbol('x4', real=True)))", "symbols": ["$x$", "$\\mu$", "$H$", "$k$", "$T$", "$\\lambda$", "$\\epsilon$", "$c$", "$M$"], "symbols_descs": ["Parameter of magnetization", "Magnetic moment", "Magnetic field strength", "Boltzmann constant", "Temperature", "Constant", "Vacuum permittivity", "Speed of light", "Number of magnetized atoms"], "si-derived_units": ["$1$", "$N/A^2$", "$A/m$", "$J/K$", "$K$", "$1$", "$F/m$", "$m/s$", "$1$"], "si_units": ["$1$", "$kg \\cdot m \\cdot s^{-2} \\cdot A^{-2}$", "$m^{-1} \\cdot A$", "$kg \\cdot m^2 \\cdot s^{-2} \\cdot K^{-1}$", "$K$", "$1$", "$kg^{-1} \\cdot m^{-3} \\cdot s^4 \\cdot A^2$", "$m \\cdot s^{-1}$", "$1$"], "properties": ["V, F", "V, F", "V, F", "C, F, P", "V, F, P", "V, F, NN", "C, F, P", "C, F, P", "V, I$\\star$, P"]}, "feynman-iii.4.33": {"dataset_class_key": "FeynmanIIICh4Eq33", "sympy_eq_str": "3.313e-34*x0/(pi*(exp(2.39959613196403e-11*x0/(pi*x1)) - 1))", "sympy_eq_srepr": "Mul(Float('3.3129999999999999e-34', precision=53), Pow(pi, Integer(-1)), Symbol('x0', real=True), Pow(Add(exp(Mul(Float('2.3995961319640253e-11', precision=53), Pow(pi, Integer(-1)), Symbol('x0', real=True), Pow(Symbol('x1', real=True), Integer(-1)))), Integer(-1)), Integer(-1)))", "symbols": ["$E$", "$h$", "$\\omega$", "$k$", "$T$"], "symbols_descs": ["Energy", "Planck constant", "Frequency", "Boltzmann constant", "Temperature"], "si-derived_units": ["$J$", "$J \\cdot s$", "$rad/s$", "$J/K$", "$K$"], "si_units": ["$kg \\cdot m^2 \\cdot s^{-2}$", "$kg \\cdot m^2 \\cdot s^{-1}$", "$s^{-1}$", "$kg \\cdot m^2 \\cdot s^{-2} \\cdot K^{-1}$", "$K$"], "properties": ["V, F, P", "C, F, P", "V, F, P", "C, F, P", "V, F, P"]}, "feynman-iii.9.52": {"dataset_class_key": "FeynmanIIICh9Eq52", "sympy_eq_str": "1.2073649260489e+34*pi*x0*x1*sin(x2*(x3 - x4)/2)**2/(x2*(x3 - x4)**2)", "sympy_eq_srepr": "Mul(Float('1.2073649260488984e+34', precision=53), pi, Symbol('x0', real=True), Symbol('x1', real=True), Pow(Symbol('x2', real=True), Integer(-1)), Pow(Add(Symbol('x3', real=True), Mul(Integer(-1), Symbol('x4', real=True))), Integer(-2)), Pow(sin(Mul(Rational(1, 2), Symbol('x2', real=True), Add(Symbol('x3', real=True), Mul(Integer(-1), Symbol('x4', real=True))))), Integer(2)))", "symbols": ["$P_{\\text{I} \\rightarrow \\text{II}}$", "$\\mu$", "$E$", "$t$", "$h$", "$\\omega$", "$\\omega_0$"], "symbols_descs": ["Probability", "Electric dipole moment", "Magnitude of electric field", "Time", "Planck constant", "Frequency", "Resonant frequency"], "si-derived_units": ["$1$", "$C \\cdot m$", "$V/m$", "$s$", "$J \\cdot s$", "$rad/s$", "$rad/s$"], "si_units": ["$1$", "$m \\cdot s \\cdot A$", "$kg \\cdot m \\cdot s^{-3} \\cdot A^{-1}$", "$s$", "$kg \\cdot m^2 \\cdot s^{-1}$", "$s^{-1}$", "$s^{-1}$"], "properties": ["V, F, NN", "V, F", "V, F", "V, F, NN", "C, F, P", "V, F, P", "V, F, P"]}, "feynman-iii.10.19": {"dataset_class_key": "FeynmanIIICh10Eq19", "sympy_eq_str": "x0*sqrt(x1**2 + x2**2 + x3**2)", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), Pow(Add(Pow(Symbol('x1', real=True), Integer(2)), Pow(Symbol('x2', real=True), Integer(2)), Pow(Symbol('x3', real=True), Integer(2))), Rational(1, 2)))", "symbols": ["$E$", "$\\mu$", "$B_x$", "$B_y$", "$B_z$"], "symbols_descs": ["Energy", "Magnetic moment", "Element of magnetic field", "Element of magnetic field", "Element of magnetic field"], "si-derived_units": ["$J$", "$N/A^2$", "$A/m$", "$A/m$", "$A/m$"], "si_units": ["$kg \\cdot m^2 \\cdot s^{-2}$", "$kg \\cdot m \\cdot s^{-2} \\cdot A^{-2}$", "$m^{-1} \\cdot A$", "$m^{-1} \\cdot A$", "$m^{-1} \\cdot A$"], "properties": ["V, F", "V, F", "V, F", "V, F", "V, F"]}, "feynman-iii.21.20": {"dataset_class_key": "FeynmanIIICh21Eq20", "sympy_eq_str": "-x0*x1*x2/x3", "sympy_eq_srepr": "Mul(Integer(-1), Symbol('x0', real=True), Symbol('x1', real=True), Symbol('x2', real=True), Pow(Symbol('x3', real=True), Integer(-1)))", "symbols": ["$J$", "$\\rho$", "$q$", "$A$", "$m$"], "symbols_descs": ["Electric current", "Electric charge density", "Electric charge", "Magnetic vector potential", "Mass"], "si-derived_units": ["$A$", "$C/m^3$", "$C$", "$V \\cdot s/m$", "$kg$"], "si_units": ["$A$", "$m^{-3} \\cdot s \\cdot A$", "$s \\cdot A$", "$kg \\cdot m \\cdot s^{-2} \\cdot A \\cdot {-1}$", "$kg$"], "properties": ["V, F", "V, F, N", "V, F, N", "V, F", "V, F, P"]}, "feynman-bonus.1": {"dataset_class_key": "FeynmanBonus1", "sympy_eq_str": "3.32662926626791e-57*x0**2*x1**2/(x2**2*sin(x3/2)**4)", "sympy_eq_srepr": "Mul(Float('3.3266292662679094e-57', precision=53), Pow(Symbol('x0', real=True), Integer(2)), Pow(Symbol('x1', real=True), Integer(2)), Pow(Symbol('x2', real=True), Integer(-2)), Pow(sin(Mul(Rational(1, 2), Symbol('x3', real=True))), Integer(-4)))", "symbols": ["$A$", "$Z_1$", "$Z_2$", "$\\alpha$", "$h$", "$c$", "$E$", "$\\theta$"], "symbols_descs": ["Differential scattering cross section", "Atomic number", "Atomic number", "Fine structure constant", "Dirac's constant", "Speed of light", "Non-relativistic kinetic energy", "Scattering angle"], "si-derived_units": ["$m^2/sr$", "$1$", "$1$", "$1$", "$J \\cdot s$", "$m/s$", "$J$", "$rad$"], "si_units": ["$m^2$", "$1$", "$1$", "$1$", "$kg \\cdot m^2 \\cdot s^{-1}$", "$m \\cdot s^{-1}$", "$kg \\cdot m^2 \\cdot s^{-2}$", "$1$"], "properties": ["V, F, P", "V, I, P", "V, I, P", "C, F, P", "C, F, P", "C, F, P", "V, F, P", "V, F, NN"]}, "feynman-bonus.2": {"dataset_class_key": "FeynmanBonus2", "sympy_eq_str": "x0*x1*(sqrt(1 + 2*x2**2*x3/(x0*x1**2))*cos(x4 - x5) + 1)/x2**2", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), Symbol('x1', real=True), Pow(Symbol('x2', real=True), Integer(-2)), Add(Mul(Pow(Add(Integer(1), Mul(Integer(2), Pow(Symbol('x0', real=True), Integer(-1)), Pow(Symbol('x1', real=True), Integer(-2)), Pow(Symbol('x2', real=True), Integer(2)), Symbol('x3', real=True))), Rational(1, 2)), cos(Add(Symbol('x4', real=True), Mul(Integer(-1), Symbol('x5', real=True))))), Integer(1)))", "symbols": ["$k$", "$m$", "$k_G$", "$L$", "$E$", "$\\theta_1$", "$\\theta_2$"], "symbols_descs": ["Inverse radius", "Mass (The Earth)", "Variable", "Angular Momentum", "Energy", "Angle", "Angle"], "si-derived_units": ["$1/m$", "$kg$", "$J \\cdot m$", "$N \\cdot m$", "$J$", "$rad$", "$rad$"], "si_units": ["$m^{-1}$", "$kg$", "$kg \\cdot m^3 \\cdot s^{-2}$", "$kg \\cdot m^2 \\cdot s^{-2}$", "$kg \\cdot m^2 \\cdot s^{-2}$", "$1$", "$1$"], "properties": ["V, F", "V, F, P", "V, F, P", "V, F, P", "V, F, P", "V, F, NN", "V, F, NN"]}, "feynman-bonus.3": {"dataset_class_key": "FeynmanBonus3", "sympy_eq_str": "x0*(1 - x1**2)/(x1*cos(x2 - x3) + 1)", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), Add(Integer(1), Mul(Integer(-1), Pow(Symbol('x1', real=True), Integer(2)))), Pow(Add(Mul(Symbol('x1', real=True), cos(Add(Symbol('x2', real=True), Mul(Integer(-1), Symbol('x3', real=True))))), Integer(1)), Integer(-1)))", "symbols": ["$r$", "$d$", "$\\alpha$", "$\\theta_1$", "$\\theta_2$"], "symbols_descs": ["Distance", "Semimajor axis of elliptical orbit", "Orbital eccentricity", "Angle", "Angle"], "si-derived_units": ["$m$", "$m$", "$1$", "$rad$", "$rad$"], "si_units": ["$m$", "$m$", "$1$", "$1$", "$1$"], "properties": ["V, F, P", "V, F, P", "V, F, P", "V, F, NN", "V, F, NN"]}, "feynman-bonus.4": {"dataset_class_key": "FeynmanBonus4", "sympy_eq_str": "sqrt(2)*sqrt((x1 - x2 - x3**2/(2*x0*x4**2))/x0)", "sympy_eq_srepr": "Mul(Pow(Integer(2), Rational(1, 2)), Pow(Mul(Pow(Symbol('x0', real=True), Integer(-1)), Add(Symbol('x1', real=True), Mul(Integer(-1), Symbol('x2', real=True)), Mul(Integer(-1), Rational(1, 2), Pow(Symbol('x0', real=True), Integer(-1)), Pow(Symbol('x3', real=True), Integer(2)), Pow(Symbol('x4', real=True), Integer(-2))))), Rational(1, 2)))", "symbols": ["$v$", "$m$", "$E$", "$U$", "$L$", "$r$"], "symbols_descs": ["Velocity", "Mass (The Earth)", "Energy", "Potential energy", "Angular momentum", "Distance"], "si-derived_units": ["$m/s$", "$kg$", "$J$", "$J$", "$N \\cdot m$", "$m$"], "si_units": ["$m \\cdot s^{-1}$", "$kg$", "$kg \\cdot m^2 \\cdot s^{-2}$", "$kg \\cdot m^2 \\cdot s^{-2}$", "$kg \\cdot m^2 \\cdot s^{-2}$", "$m$"], "properties": ["V, F, P", "V, F, P", "V, F, P", "V, F, P", "V, F", "V, F, P"]}, "feynman-bonus.5": {"dataset_class_key": "FeynmanBonus5", "sympy_eq_str": "244808.861301089*pi*x0**1.5/sqrt(x1 + x2)", "sympy_eq_srepr": "Mul(Float('244808.86130108853', precision=53), pi, Pow(Symbol('x0', real=True), Float('1.5', precision=53)), Pow(Add(Symbol('x1', real=True), Symbol('x2', real=True)), Rational(-1, 2)))", "symbols": ["$t$", "$d$", "$G$", "$m_1$", "$m_2$"], "symbols_descs": ["Orbital period", "Semimajor axis of elliptical orbit", "Gravitational constant", "Mass (The Earth)", "Mass (The Earth)"], "si-derived_units": ["$s$", "$m$", "$m^3 \\cdot kg^{-1} \\cdot s^{-2}$", "$kg$", "$kg$"], "si_units": ["$s$", "$m$", "$kg^{-1} \\cdot m^3 \\cdot s^{-2}$", "$kg$", "$kg$"], "properties": ["V, F, P", "V, F, P", "C, F, P", "V, F, P", "V, F, P"]}, "feynman-bonus.6": {"dataset_class_key": "FeynmanBonus6", "sympy_eq_str": "sqrt(2*x0*x1*x2**2/(x3*x4**2*x5**2*x6**4) + 1)", "sympy_eq_srepr": "Pow(Add(Mul(Integer(2), Symbol('x0', real=True), Symbol('x1', real=True), Pow(Symbol('x2', real=True), Integer(2)), Pow(Symbol('x3', real=True), Integer(-1)), Pow(Symbol('x4', real=True), Integer(-2)), Pow(Symbol('x5', real=True), Integer(-2)), Pow(Symbol('x6', real=True), Integer(-4))), Integer(1)), Rational(1, 2))", "symbols": ["$\\alpha$", "$\\epsilon$", "$E$", "$L$", "$m$", "$Z_1$", "$Z_2$", "$q$"], "symbols_descs": ["Orbital eccentricity", "Energy", "Energy", "Distance", "Mass", "Atomic number", "Atomic number", "Electric charge"], "si-derived_units": ["$1$", "$J$", "$J$", "$m$", "$kg$", "$1$", "$1$", "$C$"], "si_units": ["$1$", "$kg \\cdot m^2 \\cdot s^{-2}$", "$kg \\cdot m^2 \\cdot s^{-2}$", "$m$", "$kg$", "$1$", "$1$", "$s \\cdot A$"], "properties": ["V, F, P", "V, F", "V, F, P", "V, F, P", "V, F, P", "V, I, P", "V, I, P", "V, F"]}, "feynman-bonus.7": {"dataset_class_key": "FeynmanBonus7", "sympy_eq_str": "299792458.0*sqrt(1.98030940509831e-27*pi*x0 - x1/x2**2)", "sympy_eq_srepr": "Mul(Float('299792458.0', precision=53), Pow(Add(Mul(Float('1.9803094050983106e-27', precision=53), pi, Symbol('x0', real=True)), Mul(Integer(-1), Symbol('x1', real=True), Pow(Symbol('x2', real=True), Integer(-2)))), Rational(1, 2)))", "symbols": ["$H$", "$G$", "$\\rho$", "$k_\\text{f}$", "$c$", "$a_\\text{f}$"], "symbols_descs": ["Hubble's constant", "Gravitational constant", "Density of the universe", "Spacetime curvature", "Speed of light", "Radius"], "si-derived_units": ["$1/s$", "$m^3 \\cdot kg^{-1} \\cdot s^{-2}$", "$kg/s^3$", "$1/m^2$", "$m/s$", "$m$"], "si_units": ["$s^{-1}$", "$kg^{-1} \\cdot m^3 \\cdot s^{-2}$", "$kg \\cdot s^{-3}$", "$m^{-2}$", "$m \\cdot s^{-1}$", "$m$"], "properties": ["V, F, P", "C, F, P", "V, F, P", "V, I", "C, F, P", "V, F, P"]}, "feynman-bonus.9": {"dataset_class_key": "FeynmanBonus9", "sympy_eq_str": "-5.24444281156413e-83*x0**2*x1**2*(x0 + x1)/x2**5", "sympy_eq_srepr": "Mul(Integer(-1), Float('5.244442811564131e-83', precision=53), Pow(Symbol('x0', real=True), Integer(2)), Pow(Symbol('x1', real=True), Integer(2)), Pow(Symbol('x2', real=True), Integer(-5)), Add(Symbol('x0', real=True), Symbol('x1', real=True)))", "symbols": ["$P$", "$G$", "$c$", "$m_1$", "$m_2$", "$r$"], "symbols_descs": ["Gravitational wave energy", "Gravitational constant", "Speed of light", "Mass", "Mass", "Distance"], "si-derived_units": ["$J$", "$m^3 \\cdot kg^{-1} \\cdot s^{-2}$", "$m/s$", "$kg$", "$kg$", "$m$"], "si_units": ["$kg \\cdot m^2 \\cdot s^{-2}$", "$kg^{-1} \\cdot m^3 \\cdot s^{-2}$", "$m \\cdot s^{-1}$", "$kg$", "$kg$", "$m$"], "properties": ["V, F, N", "C, F, P", "C, F, P", "V, F, P", "V, F, P", "V, F, P"]}, "feynman-bonus.10": {"dataset_class_key": "FeynmanBonus10", "sympy_eq_str": "(-3.33564095198152e-9*x1 + cos(x0))/(-3.33564095198152e-9*x1*cos(x0) + 1)", "sympy_eq_srepr": "Mul(Add(Mul(Integer(-1), Float('3.3356409519815204e-9', precision=53), Symbol('x1', real=True)), cos(Symbol('x0', real=True))), Pow(Add(Mul(Integer(-1), Float('3.3356409519815204e-9', precision=53), Symbol('x1', real=True), cos(Symbol('x0', real=True))), Integer(1)), Integer(-1)))", "symbols": ["$\\cos\\theta_1$", "$\\theta_2$", "$v$", "$c$"], "symbols_descs": ["Value", "Angle", "Velocity", "Speed of light"], "si-derived_units": ["$1$", "$rad$", "$m/s$", "$m/s$"], "si_units": ["$1$", "$1$", "$m \\cdot s^{-1}$", "$m \\cdot s^{-1}$"], "properties": ["V, F", "V, F, NN", "V, F", "C, F, P"]}, "feynman-bonus.11": {"dataset_class_key": "FeynmanBonus11", "sympy_eq_str": "4*x0*sin(x1/2)**2*sin(x2*x3/2)**2/(x1**2*sin(x3/2)**2)", "sympy_eq_srepr": "Mul(Integer(4), Symbol('x0', real=True), Pow(Symbol('x1', real=True), Integer(-2)), Pow(sin(Mul(Rational(1, 2), Symbol('x1', real=True))), Integer(2)), Pow(sin(Mul(Rational(1, 2), Symbol('x3', real=True))), Integer(-2)), Pow(sin(Mul(Rational(1, 2), Symbol('x2', real=True), Symbol('x3', real=True))), Integer(2)))", "symbols": ["$I$", "$I_0$", "$\\alpha$", "$N$", "$\\delta$"], "symbols_descs": ["Wave intensity", "Amplitude of wave", "Wavelength of X-ray", "Number of phase difference", "Wavelength of X-ray"], "si-derived_units": ["$1$", "$1$", "$m$", "$1$", "$m$"], "si_units": ["$1$", "$1$", "$m$", "$1$", "$m$"], "properties": ["V, F, P", "V, F, P", "V, F, P", "V, I, P", "V, F, P"]}, "feynman-bonus.12": {"dataset_class_key": "FeynmanBonus12", "sympy_eq_str": "x0*(-x0*x2**3*x4/(x2**2 - x4**2)**2 + 4*pi*x1*x3*x4)/(4*pi*x1*x2**2)", "sympy_eq_srepr": "Mul(Rational(1, 4), Pow(pi, Integer(-1)), Symbol('x0', real=True), Pow(Symbol('x1', real=True), Integer(-1)), Pow(Symbol('x2', real=True), Integer(-2)), Add(Mul(Integer(-1), Symbol('x0', real=True), Pow(Symbol('x2', real=True), Integer(3)), Symbol('x4', real=True), Pow(Add(Pow(Symbol('x2', real=True), Integer(2)), Mul(Integer(-1), Pow(Symbol('x4', real=True), Integer(2)))), Integer(-2))), Mul(Integer(4), pi, Symbol('x1', real=True), Symbol('x3', real=True), Symbol('x4', real=True))))", "symbols": ["$F$", "$q$", "$\\epsilon$", "$y$", "$V_\\text{e}$", "$d$"], "symbols_descs": ["Force", "Electric charge", "Permittivity", "Distance", "Voltage", "Distance"], "si-derived_units": ["$N$", "$C$", "$F/m$", "$m$", "$V$", "$m$"], "si_units": ["$kg \\cdot m \\cdot s^{-2}$", "$s \\cdot A$", "$kg^{-1} \\cdot m^{-3} \\cdot s^4 \\cdot A^2$", "$m$", "$kg \\cdot m^2 \\cdot s^{-3} \\cdot A^{-1}$", "$m$"], "properties": ["V, F", "V, F", "V, F, P", "V, F, P", "V, F", "V, F, P"]}, "feynman-bonus.13": {"dataset_class_key": "FeynmanBonus13", "sympy_eq_str": "x1/(4*pi*x0*sqrt(x2**2 - 2*x2*x3*cos(x4) + x3**2))", "sympy_eq_srepr": "Mul(Rational(1, 4), Pow(pi, Integer(-1)), Pow(Symbol('x0', real=True), Integer(-1)), Symbol('x1', real=True), Pow(Add(Pow(Symbol('x2', real=True), Integer(2)), Mul(Integer(-1), Integer(2), Symbol('x2', real=True), Symbol('x3', real=True), cos(Symbol('x4', real=True))), Pow(Symbol('x3', real=True), Integer(2))), Rational(-1, 2)))", "symbols": ["$V_\\text{e}$", "$\\epsilon$", "$q$", "$r$", "$d$", "$\\alpha$"], "symbols_descs": ["Potential", "permittivity", "Electric charge", "Distance", "Distance between dipoles", "Angle"], "si-derived_units": ["$V$", "$F/m$", "$C$", "$m$", "$m$", "$rad$"], "si_units": ["$kg \\cdot m^2 \\cdot s^{-3} \\cdot A^{-1}$", "$kg^{-1} \\cdot m^{-3} \\cdot s^4 \\cdot A^2$", "$s \\cdot A$", "$m$", "$m$", "$1$"], "properties": ["V, F", "V, F, P", "V, F", "V, F, P", "V, F, P", "V, F, NN"]}, "feynman-bonus.14": {"dataset_class_key": "FeynmanBonus14", "sympy_eq_str": "x0*(-x2 + x3**3*(x4 - 1)/(x2**2*(x4 + 2)))*cos(x1)", "sympy_eq_srepr": "Mul(Symbol('x0', real=True), Add(Mul(Integer(-1), Symbol('x2', real=True)), Mul(Pow(Symbol('x2', real=True), Integer(-2)), Pow(Symbol('x3', real=True), Integer(3)), Add(Symbol('x4', real=True), Integer(-1)), Pow(Add(Symbol('x4', real=True), Integer(2)), Integer(-1)))), cos(Symbol('x1', real=True)))", "symbols": ["$V_\\text{e}$", "$E_\\text{f}$", "$\\theta$", "$r$", "$d$", "$\\alpha$"], "symbols_descs": ["Potential (out)", "Magnitude of electric field", "Angle", "Distance", "Radius of dielectric sphere", "Polarizability"], "si-derived_units": ["$V$", "$V/m$", "$rad$", "$m$", "$m$", "$1$"], "si_units": ["$kg \\cdot m^2 \\cdot s^{-3} \\cdot A^{-1}$", "$kg \\cdot m \\cdot s^{-3} \\cdot A^{-1}$", "$1$", "$m$", "$m$", "$1$"], "properties": ["V, F", "V, F", "V, F, NN", "V, F, P", "V, F, P", "V, F, P"]}, "feynman-bonus.15": {"dataset_class_key": "FeynmanBonus15", "sympy_eq_str": "x1*sqrt(1 - 1.11265005605362e-17*x0**2)/(3.33564095198152e-9*x0*cos(x2) + 1)", "sympy_eq_srepr": "Mul(Symbol('x1', real=True), Pow(Add(Integer(1), Mul(Integer(-1), Float('1.1126500560536185e-17', precision=53), Pow(Symbol('x0', real=True), Integer(2)))), Rational(1, 2)), Pow(Add(Mul(Float('3.3356409519815204e-9', precision=53), Symbol('x0', real=True), cos(Symbol('x2', real=True))), Integer(1)), Integer(-1)))", "symbols": ["$\\omega_0$", "$v$", "$c$", "$\\omega$", "$\\theta$"], "symbols_descs": ["Frequency of electromagnetic waves", "Velocity", "Speed of light", "Frequency of electromagnetic waves", "Angle"], "si-derived_units": ["$rad/s$", "$m/s$", "$m/s$", "$rad/s$", "$rad$"], "si_units": ["$s^{-1}$", "$m \\cdot s^{-1}$", "$m \\cdot s^{-1}$", "$s^{-1}$", "$1$"], "properties": ["V, F", "V, F, P", "C, F, P", "V, F, P", "V, F, NN"]}, "feynman-bonus.16": {"dataset_class_key": "FeynmanBonus16", "sympy_eq_str": "x1*x4 + 8.98755178736818e+16*sqrt(x3**2 + 1.11265005605362e-17*(x0 - x1*x2)**2)", "sympy_eq_srepr": "Add(Mul(Symbol('x1', real=True), Symbol('x4', real=True)), Mul(Float('89875517873681760.0', precision=53), Pow(Add(Pow(Symbol('x3', real=True), Integer(2)), Mul(Float('1.1126500560536183e-17', precision=53), Pow(Add(Symbol('x0', real=True), Mul(Integer(-1), Symbol('x1', real=True), Symbol('x2', real=True))), Integer(2)))), Rational(1, 2))))", "symbols": ["$E$", "$p$", "$q$", "$A$", "$c$", "$m$", "$V_\\text{e}$"], "symbols_descs": ["Energy", "Momentum", "Electric charge", "Vector potential", "Speed of light", "Mass", "Voltage"], "si-derived_units": ["$J$", "$kg \\cdot m/s$", "$C$", "$V \\cdot s/m$", "$m/s$", "$kg$", "$V$"], "si_units": ["$kg \\cdot m^2 \\cdot s^{-2}$", "$kg \\cdot m \\cdot s^{-1}$", "$s \\cdot A$", "$kg \\cdot m \\cdot s^{-2} \\cdot A \\cdot {-1}$", "$m \\cdot s^{-1}$", "$kg$", "$kg \\cdot m^2 \\cdot s^{-3} \\cdot A^{-1}$"], "properties": ["V, F", "V, F", "V, F", "V, F", "C, F, P", "V, F, P", "V, F"]}, "feynman-bonus.17": {"dataset_class_key": "FeynmanBonus17", "sympy_eq_str": "(x0**2*x2**2*x3**2*(x3*x4/x5 + 1) + x1**2)/(2*x0)", "sympy_eq_srepr": "Mul(Rational(1, 2), Pow(Symbol('x0', real=True), Integer(-1)), Add(Mul(Pow(Symbol('x0', real=True), Integer(2)), Pow(Symbol('x2', real=True), Integer(2)), Pow(Symbol('x3', real=True), Integer(2)), Add(Mul(Symbol('x3', real=True), Symbol('x4', real=True), Pow(Symbol('x5', real=True), Integer(-1))), Integer(1))), Pow(Symbol('x1', real=True), Integer(2))))", "symbols": ["$E$", "$m$", "$p$", "$\\omega$", "$x$", "$\\alpha$", "$y$"], "symbols_descs": ["Energy", "Mass", "Momentum", "Frequency of electromagnetic waves", "Position", "Deviation from the harmonic oscillator", "Distance"], "si-derived_units": ["$J$", "$kg$", "$kg \\cdot m/s$", "$rad/s$", "$m$", "$1$", "$m$"], "si_units": ["$kg \\cdot m^2 \\cdot s^{-2}$", "$kg$", "$kg \\cdot m \\cdot s^{-1}$", "$s^{-1}$", "$m$", "$1$", "$m$"], "properties": ["V, F", "V, F, P", "V, F", "V, F, P", "V, F", "V, F", "V, F, P"]}, "feynman-bonus.19": {"dataset_class_key": "FeynmanBonus19", "sympy_eq_str": "-1872855580.36049*(8.07760871306249e+33*x0/x1**2 + 8.98755178736818e+16*x2**2*(1 - 2*x3))/pi", "sympy_eq_srepr": "Mul(Integer(-1), Float('1872855580.3604875', precision=53), Pow(pi, Integer(-1)), Add(Mul(Float('8.07760871306249e+33', precision=53), Symbol('x0', real=True), Pow(Symbol('x1', real=True), Integer(-2))), Mul(Float('89875517873681760.0', precision=53), Pow(Symbol('x2', real=True), Integer(2)), Add(Integer(1), Mul(Integer(-1), Integer(2), Symbol('x3', real=True))))))", "symbols": ["$p_\\text{f}$", "$G$", "$c$", "$k_\\text{f}$", "$a_\\text{f}$", "$H$", "$\\alpha$"], "symbols_descs": ["Pressure", "Gravitational constant", "Speed of light", "Variable", "Distance", "Hubble's Constant", "Variable"], "si-derived_units": ["$Pa$", "$m^3 \\cdot kg^{-1} \\cdot s^{-2}$", "$m/s$", "$1$", "$m$", "$1/s$", "$1$"], "si_units": ["$kg \\cdot m^{-1} \\cdot s^{-2}$", "$kg^{-1} \\cdot m^3 \\cdot s^{-2}$", "$m \\cdot s^{-1}$", "$1$", "$m$", "$s^{-1}$", "$1$"], "properties": ["V, F", "C, F, P", "C, F, P", "V, F", "V, F, P", "V, F, P", "V, F"]}, "feynman-bonus.20": {"dataset_class_key": "FeynmanBonus20", "sympy_eq_str": "7.83707760458308e-29*x0**2*(x0/x1 - sin(x2)**2 + x1/x0)/(pi*x1**2)", "sympy_eq_srepr": "Mul(Float('7.8370776045830812e-29', precision=53), Pow(pi, Integer(-1)), Pow(Symbol('x0', real=True), Integer(2)), Pow(Symbol('x1', real=True), Integer(-2)), Add(Mul(Symbol('x0', real=True), Pow(Symbol('x1', real=True), Integer(-1))), Mul(Integer(-1), Pow(sin(Symbol('x2', real=True)), Integer(2))), Mul(Pow(Symbol('x0', real=True), Integer(-1)), Symbol('x1', real=True))))", "symbols": ["$A$", "$\\alpha$", "$h$", "$m$", "$c$", "$\\omega_0$", "$\\omega$", "$\\theta$"], "symbols_descs": ["Differential cross section", "Fine structure constant", "Planck constant", "Electron mass", "Speed of light", "Frequency", "Frequency", "Scattering angle"], "si-derived_units": ["$m^2/sr$", "$1$", "$J \\cdot s$", "$kg$", "$m/s$", "$rad/s$", "$rad/s$", "$rad$"], "si_units": ["$m^2$", "$1$", "$kg \\cdot m^2 \\cdot s^{-1}$", "$kg$", "$m \\cdot s^{-1}$", "$s^{-1}$", "$s^{-1}$", "$1$"], "properties": ["V, F, P", "C, F, P", "C, F, P", "C, F, P", "C, F, P", "V, F, P", "V, F, P", "V, F, NN"]}}
